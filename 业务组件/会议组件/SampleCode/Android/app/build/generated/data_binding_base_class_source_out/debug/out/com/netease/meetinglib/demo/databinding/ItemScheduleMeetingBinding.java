// Generated by view binder compiler. Do not edit!
package com.netease.meetinglib.demo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.kyleduo.switchbutton.SwitchButton;
import com.netease.meetinglib.demo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemScheduleMeetingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText edtMeetingPwd;

  @NonNull
  public final EditText edtMeetingTheme;

  @NonNull
  public final SwitchButton sbMeetingSwitch;

  @NonNull
  public final TextView tvMeetingSubTittle;

  @NonNull
  public final TextView tvMeetingTime;

  @NonNull
  public final TextView tvMeetingTittle;

  private ItemScheduleMeetingBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText edtMeetingPwd, @NonNull EditText edtMeetingTheme,
      @NonNull SwitchButton sbMeetingSwitch, @NonNull TextView tvMeetingSubTittle,
      @NonNull TextView tvMeetingTime, @NonNull TextView tvMeetingTittle) {
    this.rootView = rootView;
    this.edtMeetingPwd = edtMeetingPwd;
    this.edtMeetingTheme = edtMeetingTheme;
    this.sbMeetingSwitch = sbMeetingSwitch;
    this.tvMeetingSubTittle = tvMeetingSubTittle;
    this.tvMeetingTime = tvMeetingTime;
    this.tvMeetingTittle = tvMeetingTittle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemScheduleMeetingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemScheduleMeetingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_schedule_meeting, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemScheduleMeetingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edt_meeting_pwd;
      EditText edtMeetingPwd = rootView.findViewById(id);
      if (edtMeetingPwd == null) {
        break missingId;
      }

      id = R.id.edt_meeting_theme;
      EditText edtMeetingTheme = rootView.findViewById(id);
      if (edtMeetingTheme == null) {
        break missingId;
      }

      id = R.id.sb_meeting_switch;
      SwitchButton sbMeetingSwitch = rootView.findViewById(id);
      if (sbMeetingSwitch == null) {
        break missingId;
      }

      id = R.id.tv_meeting_sub_tittle;
      TextView tvMeetingSubTittle = rootView.findViewById(id);
      if (tvMeetingSubTittle == null) {
        break missingId;
      }

      id = R.id.tv_meeting_time;
      TextView tvMeetingTime = rootView.findViewById(id);
      if (tvMeetingTime == null) {
        break missingId;
      }

      id = R.id.tv_meeting_tittle;
      TextView tvMeetingTittle = rootView.findViewById(id);
      if (tvMeetingTittle == null) {
        break missingId;
      }

      return new ItemScheduleMeetingBinding((ConstraintLayout) rootView, edtMeetingPwd,
          edtMeetingTheme, sbMeetingSwitch, tvMeetingSubTittle, tvMeetingTime, tvMeetingTittle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
