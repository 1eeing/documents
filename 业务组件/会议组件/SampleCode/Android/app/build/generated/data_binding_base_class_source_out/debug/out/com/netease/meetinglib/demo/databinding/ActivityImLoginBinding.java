// Generated by view binder compiler. Do not edit!
package com.netease.meetinglib.demo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SwitchCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.netease.meetinglib.demo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityImLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText firstEditor;

  @NonNull
  public final TextView imLoginState;

  @NonNull
  public final Button loginBtn;

  @NonNull
  public final Button logoutBtn;

  @NonNull
  public final EditText secondEditor;

  @NonNull
  public final TextView title;

  @NonNull
  public final SwitchCompat toggleIMReuse;

  private ActivityImLoginBinding(@NonNull ConstraintLayout rootView, @NonNull EditText firstEditor,
      @NonNull TextView imLoginState, @NonNull Button loginBtn, @NonNull Button logoutBtn,
      @NonNull EditText secondEditor, @NonNull TextView title,
      @NonNull SwitchCompat toggleIMReuse) {
    this.rootView = rootView;
    this.firstEditor = firstEditor;
    this.imLoginState = imLoginState;
    this.loginBtn = loginBtn;
    this.logoutBtn = logoutBtn;
    this.secondEditor = secondEditor;
    this.title = title;
    this.toggleIMReuse = toggleIMReuse;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityImLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityImLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_im_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityImLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.firstEditor;
      EditText firstEditor = rootView.findViewById(id);
      if (firstEditor == null) {
        break missingId;
      }

      id = R.id.imLoginState;
      TextView imLoginState = rootView.findViewById(id);
      if (imLoginState == null) {
        break missingId;
      }

      id = R.id.loginBtn;
      Button loginBtn = rootView.findViewById(id);
      if (loginBtn == null) {
        break missingId;
      }

      id = R.id.logoutBtn;
      Button logoutBtn = rootView.findViewById(id);
      if (logoutBtn == null) {
        break missingId;
      }

      id = R.id.secondEditor;
      EditText secondEditor = rootView.findViewById(id);
      if (secondEditor == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = rootView.findViewById(id);
      if (title == null) {
        break missingId;
      }

      id = R.id.toggleIMReuse;
      SwitchCompat toggleIMReuse = rootView.findViewById(id);
      if (toggleIMReuse == null) {
        break missingId;
      }

      return new ActivityImLoginBinding((ConstraintLayout) rootView, firstEditor, imLoginState,
          loginBtn, logoutBtn, secondEditor, title, toggleIMReuse);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
