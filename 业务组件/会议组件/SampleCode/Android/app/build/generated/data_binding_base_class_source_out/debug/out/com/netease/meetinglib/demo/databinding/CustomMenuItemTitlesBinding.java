// Generated by view binder compiler. Do not edit!
package com.netease.meetinglib.demo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.netease.meetinglib.demo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CustomMenuItemTitlesBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText checkedTitle;

  @NonNull
  public final EditText itemId;

  @NonNull
  public final EditText uncheckedTitle;

  private CustomMenuItemTitlesBinding(@NonNull LinearLayout rootView,
      @NonNull EditText checkedTitle, @NonNull EditText itemId, @NonNull EditText uncheckedTitle) {
    this.rootView = rootView;
    this.checkedTitle = checkedTitle;
    this.itemId = itemId;
    this.uncheckedTitle = uncheckedTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CustomMenuItemTitlesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CustomMenuItemTitlesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.custom_menu_item_titles, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CustomMenuItemTitlesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.checkedTitle;
      EditText checkedTitle = rootView.findViewById(id);
      if (checkedTitle == null) {
        break missingId;
      }

      id = R.id.itemId;
      EditText itemId = rootView.findViewById(id);
      if (itemId == null) {
        break missingId;
      }

      id = R.id.uncheckedTitle;
      EditText uncheckedTitle = rootView.findViewById(id);
      if (uncheckedTitle == null) {
        break missingId;
      }

      return new CustomMenuItemTitlesBinding((LinearLayout) rootView, checkedTitle, itemId,
          uncheckedTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
