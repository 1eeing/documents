// Generated by view binder compiler. Do not edit!
package com.netease.meetinglib.demo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.netease.meetinglib.demo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentEntranceBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button btnJoinMeeting;

  @NonNull
  public final Button btnLoginWithNeMeeting;

  @NonNull
  public final Button btnLoginWithSso;

  @NonNull
  public final Button btnLoginWithToken;

  @NonNull
  public final FrameLayout entranceFragment;

  private FragmentEntranceBinding(@NonNull FrameLayout rootView, @NonNull Button btnJoinMeeting,
      @NonNull Button btnLoginWithNeMeeting, @NonNull Button btnLoginWithSso,
      @NonNull Button btnLoginWithToken, @NonNull FrameLayout entranceFragment) {
    this.rootView = rootView;
    this.btnJoinMeeting = btnJoinMeeting;
    this.btnLoginWithNeMeeting = btnLoginWithNeMeeting;
    this.btnLoginWithSso = btnLoginWithSso;
    this.btnLoginWithToken = btnLoginWithToken;
    this.entranceFragment = entranceFragment;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentEntranceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentEntranceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_entrance, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentEntranceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_join_meeting;
      Button btnJoinMeeting = rootView.findViewById(id);
      if (btnJoinMeeting == null) {
        break missingId;
      }

      id = R.id.btn_login_with_ne_meeting;
      Button btnLoginWithNeMeeting = rootView.findViewById(id);
      if (btnLoginWithNeMeeting == null) {
        break missingId;
      }

      id = R.id.btn_login_with_sso;
      Button btnLoginWithSso = rootView.findViewById(id);
      if (btnLoginWithSso == null) {
        break missingId;
      }

      id = R.id.btn_login_with_token;
      Button btnLoginWithToken = rootView.findViewById(id);
      if (btnLoginWithToken == null) {
        break missingId;
      }

      FrameLayout entranceFragment = (FrameLayout) rootView;

      return new FragmentEntranceBinding((FrameLayout) rootView, btnJoinMeeting,
          btnLoginWithNeMeeting, btnLoginWithSso, btnLoginWithToken, entranceFragment);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
