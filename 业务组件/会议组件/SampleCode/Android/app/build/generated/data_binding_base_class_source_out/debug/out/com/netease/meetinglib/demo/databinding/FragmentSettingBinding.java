// Generated by view binder compiler. Do not edit!
package com.netease.meetinglib.demo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.netease.meetinglib.demo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final LinearLayout btnControlSetting;

  @NonNull
  public final Button btnLogout;

  @NonNull
  public final Button btnMeetingSettings;

  @NonNull
  public final Button btnOpenBeauty;

  @NonNull
  public final Button btnOpenControl;

  @NonNull
  public final Button configMoreMenus;

  @NonNull
  public final Button configToolbarMenus;

  @NonNull
  public final FrameLayout settingsFragment;

  private FragmentSettingBinding(@NonNull FrameLayout rootView,
      @NonNull LinearLayout btnControlSetting, @NonNull Button btnLogout,
      @NonNull Button btnMeetingSettings, @NonNull Button btnOpenBeauty,
      @NonNull Button btnOpenControl, @NonNull Button configMoreMenus,
      @NonNull Button configToolbarMenus, @NonNull FrameLayout settingsFragment) {
    this.rootView = rootView;
    this.btnControlSetting = btnControlSetting;
    this.btnLogout = btnLogout;
    this.btnMeetingSettings = btnMeetingSettings;
    this.btnOpenBeauty = btnOpenBeauty;
    this.btnOpenControl = btnOpenControl;
    this.configMoreMenus = configMoreMenus;
    this.configToolbarMenus = configToolbarMenus;
    this.settingsFragment = settingsFragment;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_setting, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_control_setting;
      LinearLayout btnControlSetting = rootView.findViewById(id);
      if (btnControlSetting == null) {
        break missingId;
      }

      id = R.id.btn_logout;
      Button btnLogout = rootView.findViewById(id);
      if (btnLogout == null) {
        break missingId;
      }

      id = R.id.btn_meeting_settings;
      Button btnMeetingSettings = rootView.findViewById(id);
      if (btnMeetingSettings == null) {
        break missingId;
      }

      id = R.id.btn_open_beauty;
      Button btnOpenBeauty = rootView.findViewById(id);
      if (btnOpenBeauty == null) {
        break missingId;
      }

      id = R.id.btn_open_control;
      Button btnOpenControl = rootView.findViewById(id);
      if (btnOpenControl == null) {
        break missingId;
      }

      id = R.id.configMoreMenus;
      Button configMoreMenus = rootView.findViewById(id);
      if (configMoreMenus == null) {
        break missingId;
      }

      id = R.id.configToolbarMenus;
      Button configToolbarMenus = rootView.findViewById(id);
      if (configToolbarMenus == null) {
        break missingId;
      }

      FrameLayout settingsFragment = (FrameLayout) rootView;

      return new FragmentSettingBinding((FrameLayout) rootView, btnControlSetting, btnLogout,
          btnMeetingSettings, btnOpenBeauty, btnOpenControl, configMoreMenus, configToolbarMenus,
          settingsFragment);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
